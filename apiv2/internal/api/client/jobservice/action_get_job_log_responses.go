// Code generated by go-swagger; DO NOT EDIT.

package jobservice

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/simbou2000/goharbor-client/v5/apiv2/model"
)

// ActionGetJobLogReader is a Reader for the ActionGetJobLog structure.
type ActionGetJobLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ActionGetJobLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewActionGetJobLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewActionGetJobLogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewActionGetJobLogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewActionGetJobLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewActionGetJobLogInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewActionGetJobLogOK creates a ActionGetJobLogOK with default headers values
func NewActionGetJobLogOK() *ActionGetJobLogOK {
	return &ActionGetJobLogOK{}
}

/*ActionGetJobLogOK handles this case with default header values.

Get job log successfully.
*/
type ActionGetJobLogOK struct {
	/*The content type of response body
	 */
	ContentType string

	Payload string
}

func (o *ActionGetJobLogOK) Error() string {
	return fmt.Sprintf("[GET /jobservice/jobs/{job_id}/log][%d] actionGetJobLogOK  %+v", 200, o.Payload)
}

func (o *ActionGetJobLogOK) GetPayload() string {
	return o.Payload
}

func (o *ActionGetJobLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Type
	o.ContentType = response.GetHeader("Content-Type")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActionGetJobLogUnauthorized creates a ActionGetJobLogUnauthorized with default headers values
func NewActionGetJobLogUnauthorized() *ActionGetJobLogUnauthorized {
	return &ActionGetJobLogUnauthorized{}
}

/*ActionGetJobLogUnauthorized handles this case with default header values.

Unauthorized
*/
type ActionGetJobLogUnauthorized struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *ActionGetJobLogUnauthorized) Error() string {
	return fmt.Sprintf("[GET /jobservice/jobs/{job_id}/log][%d] actionGetJobLogUnauthorized  %+v", 401, o.Payload)
}

func (o *ActionGetJobLogUnauthorized) GetPayload() *model.Errors {
	return o.Payload
}

func (o *ActionGetJobLogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActionGetJobLogForbidden creates a ActionGetJobLogForbidden with default headers values
func NewActionGetJobLogForbidden() *ActionGetJobLogForbidden {
	return &ActionGetJobLogForbidden{}
}

/*ActionGetJobLogForbidden handles this case with default header values.

Forbidden
*/
type ActionGetJobLogForbidden struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *ActionGetJobLogForbidden) Error() string {
	return fmt.Sprintf("[GET /jobservice/jobs/{job_id}/log][%d] actionGetJobLogForbidden  %+v", 403, o.Payload)
}

func (o *ActionGetJobLogForbidden) GetPayload() *model.Errors {
	return o.Payload
}

func (o *ActionGetJobLogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActionGetJobLogNotFound creates a ActionGetJobLogNotFound with default headers values
func NewActionGetJobLogNotFound() *ActionGetJobLogNotFound {
	return &ActionGetJobLogNotFound{}
}

/*ActionGetJobLogNotFound handles this case with default header values.

Not found
*/
type ActionGetJobLogNotFound struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *ActionGetJobLogNotFound) Error() string {
	return fmt.Sprintf("[GET /jobservice/jobs/{job_id}/log][%d] actionGetJobLogNotFound  %+v", 404, o.Payload)
}

func (o *ActionGetJobLogNotFound) GetPayload() *model.Errors {
	return o.Payload
}

func (o *ActionGetJobLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActionGetJobLogInternalServerError creates a ActionGetJobLogInternalServerError with default headers values
func NewActionGetJobLogInternalServerError() *ActionGetJobLogInternalServerError {
	return &ActionGetJobLogInternalServerError{}
}

/*ActionGetJobLogInternalServerError handles this case with default header values.

Internal server error
*/
type ActionGetJobLogInternalServerError struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *ActionGetJobLogInternalServerError) Error() string {
	return fmt.Sprintf("[GET /jobservice/jobs/{job_id}/log][%d] actionGetJobLogInternalServerError  %+v", 500, o.Payload)
}

func (o *ActionGetJobLogInternalServerError) GetPayload() *model.Errors {
	return o.Payload
}

func (o *ActionGetJobLogInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
